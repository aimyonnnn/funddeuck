<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.test.mapper.FundingMapper">
	<!-- 배송지 등록 insert -->
	<insert id="insertDelivery">
		INSERT INTO delivery
			VALUES (
				null 
				, #{member_id}
				, #{delivery_reciever}
				, #{delivery_phone}
				, #{delivery_zipcode}
				, #{delivery_add}
				, #{delivery_detailadd}
				, #{delivery_default}
			)
	
	</insert>
	
	<!-- 배송지 목록 조회 -->
	<select id="selectDeliveryList" resultType="com.itwillbs.test.vo.DeliveryVO">
		SELECT * 
			FROM delivery
				WHERE member_id = #{id}
	</select>
	
	<!-- 기본 배송지 조회 -->
	<select id="selectDeliveryDefault">
		SELECT * 
			FROM delivery
				WHERE delivery_default = 1 
					AND member_id = #{id}
	</select>
	
	<!-- 선택한 배송지 조회 -->
	<select id="selectDelivery">
		SELECT * 
			FROM delivery
				WHERE delivery_idx = #{delivery_idx}
					AND member_id = #{id}
		
	</select>
	
	<!-- 기존 기본배송지 0으로 변경 -->
	<update id="updateDeliveryDefault">
<!-- 		<selectKey resultType="" order="BEFORE"></selectKey> -->
		UPDATE delivery
			SET delivery_default = 0
				WHERE delivery_default = 1
	</update>
	
	<!-- 프로젝트 상세 페이지 이동 시 조회할 프로젝트 정보 -->
	<select id="selectProjectInfo" resultType="com.itwillbs.test.vo.ProjectVO"> 
			SELECT *
				FROM project
					WHERE project_idx = #{project_idx}
	</select>
	
	<!-- 프로젝트 상세 페이지 이동 시 조회할 리워드 정보 -->
	<select id="selectProjectRewardInfo" resultType="com.itwillbs.test.vo.RewardVO"> 
		 SELECT
			r.project_idx,
		    r.reward_idx,
		    r.reward_name,
		    r.reward_price,
		    r.reward_option,
		    r.reward_quantity, 
	        r.reward_quantity - IFNULL(SUM(p.payment_quantity), 0) as remaining_quantity,
    	    r.reward_quantity - (r.reward_quantity - IFNULL(SUM(p.payment_quantity), 0)) as sales_quantity
	    FROM 
	        reward r
	    LEFT JOIN 
	        payment p ON r.reward_idx = p.reward_idx
	        AND p.payment_confirm = 1 					-- 예약완료
	    WHERE 
	        r.project_idx = 1
	    GROUP BY 
	        r.project_idx, r.reward_idx, r.reward_option, r.reward_quantity;
	</select>
	
	<!-- 검색어로 프로젝트 리스트 조회 -->
	<select id="selectFundingSearchKeyword" resultType="com.itwillbs.test.vo.ProjectVO">
			SELECT *
				FROM project
					WHERE project_subject LIKE CONCAT('%',#{searchKeyword},'%')
						OR project_category LIKE CONCAT('%',#{searchKeyword},'%')
							OR project_hashtag LIKE CONCAT('%',#{searchKeyword},'%')
						<!-- 프로젝트 상태 선택 시 -->
						<if test="!status.equals('all')">
						AND
						<choose>
							<when test="status.equals('noStart')">
								project_status = 1
							</when>
							<when test="status.equals('active')">
								project_status = 2
							</when>
							<when test="status.equals('end')">
								project_status IN (3, 4, 5)
							</when>
						</choose>
						</if>
							<!-- 프로젝트 정렬 방식 선택 시 -->
							<if test="!index.equals('newest')">
							ORDER BY
							<choose>
								<when test="index.equals('amount')">
									project_cumulative_amount DESC
								</when>
								<when test="index.equals('target')">
									project_target DESC
								</when>
							</choose>
							</if>
	</select>
		
	<!-- 멤버가 한 펀딩 리스트를 뽑음 -->
	<select id="selectMemberFunDing">
		SELECT pay.payment_idx
		, pro.project_subject
		, pay.payment_quantity
		, pay.total_amount
		, pay.delivery_status
		, re.reward_name
		, re.reward_detail
		, re.reward_option
		, pay.payment_date
		, del.delivery_add
		, del.delivery_detailadd
		, pay.waybill_num
		, pay.payment_confirm
		, rev.review_idx
		, pro.project_idx
		, pay.courier
		FROM payment pay 
		JOIN project pro ON pay.project_idx = pro.project_idx
		JOIN reward re ON re.reward_idx = pay.reward_idx
		JOIN delivery del ON del.delivery_idx = pay.delivery_idx
		LEFT JOIN review rev ON pay.payment_idx = rev.payment_idx
		WHERE pay.member_idx = (SELECT member_idx
								FROM members
								WHERE member_id = #{sId })
			<if test='payment_confirm != 0'>
			AND payment_confirm = #{payment_confirm}
			</if>
	ORDER BY pay.payment_idx DESC
	LIMIT
		#{startRow}, #{listLimit}
	</select>
	
	<!-- 모달 창에 띄울 펀딩 1개의 내용 -->
	<select id="selectModalFunding">
		SELECT pay.payment_idx
			, pro.project_subject
			, pay.payment_quantity
			, pay.total_amount
			, pay.delivery_status
			, re.reward_name
			, re.reward_detail
			, re.reward_option
			, pay.payment_date
			, del.delivery_add
			, del.delivery_detailadd
			, pay.waybill_num
			, pay.payment_confirm
			, rev.review_idx
			, rev.review_status
			, pay.courier
			FROM payment pay JOIN project pro
				ON pay.project_idx = pro.project_idx
				JOIN reward re
					ON re.reward_idx = pay.reward_idx
				JOIN delivery del
					ON del.delivery_idx = pay.delivery_idx
				LEFT JOIN review rev ON pay.payment_idx = rev.payment_idx
				WHERE pay.payment_idx = #{payment_idx}
	</select>
	
		<!-- 페이징 처리를 위한 갯수 받는 구문 -->
	<select id="selectMemberFunDingCoung" resultType="int">
		SELECT count(payment_idx)
		FROM payment
			WHERE member_idx = (SELECT member_idx
								FROM members
								WHERE member_id = #{sId })
			<if test='payment_confirm != 0'>
				AND payment_confirm = #{payment_confirm}
			</if>
	</select>
	
	<update id="requestMemberCancellcation">
		UPDATE payment
	    SET cancel_context = #{context}, cancel_img = #{saveFileName}, payment_confirm = 3
	    WHERE payment_idx = #{payment_idx}
	</update>
	
	<!-- 프로젝트 리스트 조회(탐색 페이지) -->
	<select id="selectFundingList" resultType="com.itwillbs.test.vo.ProjectVO">
		SELECT *
			FROM project
				WHERE project_approve_status = 5
			<!-- 카테고리 선택 시 실행할 구문, 미선택시 실행x -->
			<if test="!category.equals('all')">
				AND
				<choose>
					<when test="category.equals('tech')">
						project_category LIKE '테크/가전'
					</when>
					<when test="category.equals('fashion')">
						project_category LIKE '패션/잡화'
					</when>
					<when test="category.equals('living')">
						project_category LIKE '홈/리빙'
					</when>
					<when test="category.equals('beauty')">
						project_category LIKE '뷰티'
					</when>
					<when test="category.equals('publish')">
						project_category LIKE '출판'
					</when>
					<when test="category.equals('green')">
						project_category LIKE '친환경'
					</when>
					<when test="category.equals('donate')">
						project_category LIKE '기부'
					</when>
					<when test="category.equals('savAnimal')">
						project_category LIKE '동물보호'
					</when>
				</choose>
			</if>
				<!-- 1-미진행 2-진행중 3-진행완료 4-정산신청 5-정산완료' -->
				<if test="!status.equals('all') and !category.equals('all')">
					AND
					<choose>
						<when test="status.equals('active')">
							project_status = 2
						</when>
						<when test="status.equals('end')">
							project_status IN (3, 4, 5)
						</when>
					</choose>
				</if>
				<!-- 카테고리 선택시 실행 -->
				<!-- 1-미진행 2-진행중 3-진행완료 4-정산신청 5-정산완료' -->
				<if test="!status.equals('all') and category.equals('all')">
					AND
					<choose>
						<when test="status.equals('active')">
							project_status = 2
						</when>
						<when test="status.equals('end')">
							project_status IN (3, 4, 5)
						</when>
					</choose>
				</if>
				<if test="!index.equals('newest')">
					ORDER BY
					<choose>
						<when test="index.equals('lastMin')">
							project_end_date DESC
						</when>
						<when test="index.equals('amount')">
							project_cumulative_amount DESC
						</when>
						<when test="index.equals('target')">
							project_target DESC
						</when>
					</choose>
				</if>
	</select>

	<!-- 프로젝트 상세 페이지 이동 시 조회할 프로젝트 게시판 정보 -->
	<select id="selectMakerBoardInfo" resultType="com.itwillbs.test.vo.MakerBoardVO">
		SELECT *
			FROM maker_board
				WHERE project_idx = #{project_idx}
	</select>
	
	<!-- 프로젝트 상세 페이지 이동 시 조회할 프로젝트 커뮤니티 게시물 정보 -->
	<select id="selectProjectCommunityInfo" resultType="com.itwillbs.test.vo.ProjectCommunityVO">
		SELECT *
			FROM project_community
				WHERE project_idx = #{project_idx}
	</select>
	
	<!-- 프로젝트 상세 페이지에서 의견 남기기 -->
	<insert id="insertComment">
		INSERT 
			INTO project_community
			VALUES (
				null						   -- project_community_idx
				, #{project_idx}  			   -- project_idx
				, #{member_id}    			   -- member_id
				, #{project_community_subject} -- project_community_subject
				, #{project_community_content} -- project_community_content
				, now()                        -- project_community_regdate
			)
	</insert>
	
	<!-- 오픈 예정 프로젝트 리스트 조회(탐색 페이지) -->
	<select id="selectExpectedFundingList">
		SELECT *
			FROM project
				WHERE project_status = 1
					AND project_approve_status = 5
				<!-- 카테고리 선택 시 실행할 구문, 미선택시 실행x -->
				<if test="!category.equals('all')">
					AND
					<choose>
						<when test="category.equals('tech')">
							project_category LIKE '테크/가전'
						</when>
						<when test="category.equals('fashion')">
							project_category LIKE '패션/잡화'
						</when>
						<when test="category.equals('living')">
							project_category LIKE '홈/리빙'
						</when>
						<when test="category.equals('beauty')">
							project_category LIKE '뷰티'
						</when>
						<when test="category.equals('publish')">
							project_category LIKE '출판'
						</when>
						<when test="category.equals('green')">
							project_category LIKE '친환경'
						</when>
						<when test="category.equals('donate')">
							project_category LIKE '기부'
						</when>
						<when test="category.equals('savAnimal')">
							project_category LIKE '동물보호'
						</when>
					</choose>
				</if>
	</select>
		
	<!-- 프로젝트 상세 페이지 이동 시 조회할 총 후원자수 정보 -->
	<select id="selectSupTotal" resultType="int">
		SELECT count(*)
			FROM payment
				WHERE project_idx = #{project_idx} AND payment_confirm = 1;
	</select>
	
	<!-- 프로젝트 메이커 로고  -->
	<select id="selectMakerLogo">
		SELECT *
			FROM maker
				WHERE maker_idx = #{maker_idx}
	</select>
	
	<!--  -->
	<insert id="insertPayment">
		INSERT INTO payment(
	        member_idx
	        , project_idx
	        , reward_idx
	        , delivery_idx
	        , member_email
	        , member_phone
	        , reward_amount
	        , additional_amount
	        , use_coupon_amount
	        , total_amount
	        , payment_date
	        , payment_quantity
	        , payment_confirm
	        , payment_method
	    )
			VALUES (
				#{member_idx}
				, #{project_idx}
				, #{reward_idx}
				, #{delivery_idx}
				, #{member_email}
				, #{member_phone}
				, #{reward_amount}
				, #{additional_amount}
				, #{use_coupon_amount}
				, #{total_amount}
				, #{payment_date}
				, #{payment_quantity}
				, #{payment_confirm}
				, #{payment_method}
			)
	</insert>
	
	<!-- 자동으로 배송상태 변경 -->
	<update id="AutoUpdateDeliveryStatus">
		UPDATE payment
		SET delivery_status = #{delivery_status}
		WHERE payment_idx = #{payment_idx}
	</update>
	
	<!-- 주문서번호 payment_idx 조회  -->
	<select id="selectPaymentIdx">
		SELECT payment_idx
			FROM payment
				WHERE 
					member_idx = #{member_idx} AND
					project_idx = #{project_idx} AND
					reward_idx = #{reward_idx} AND
					delivery_idx = #{delivery_idx} AND
					reward_amount = #{reward_amount} AND
					additional_amount = #{additional_amount} AND
					use_coupon_amount = #{use_coupon_amount} AND
					total_amount = #{total_amount} AND
					payment_date = #{payment_date} AND
					payment_quantity = #{payment_quantity} AND
					payment_confirm = #{payment_confirm} AND
					payment_method = #{payment_method}
				 	
	</select>
	
	<!-- 프로젝트 상태 조회 -->
	<select id="selectProjectStatus">
		SELECT pro.project_status
			FROM payment pay JOIN project pro
				ON pay.project_idx = pro.project_idx 
					WHERE pay.payment_idx = #{payment_idx}
	</select>
	
	<!-- 주문서 조회 -->
	<select id="selectPaymentInfo">
		SELECT *
			FROM payment
				WHERE payment_idx = #{payment_idx}
	</select>
	
	<!-- 아이디 조회 -->
	<select id="selectMemberId">
		SELECT member_id
			FROM members
				WHERE member_idx = #{member_idx}
	</select>
	
	<!-- 출금이체 후 결제승인여부 결제완료(2)로 변경 -->
	<update id="updatePaymentConfirmCompleted">
		UPDATE payment
			SET payment_confirm = 2
				WHERE
					payment_idx = #{payment_idx}
	</update>	
	
	<!-- 리워드 수량 변경 -->
	<update id="updateRewardAmount">
		UPDATE reward 
			SET reward_quantity = reward_quantity - #{payment_quantity}
				WHERE project_idx = #{project_idx}
					AND reward_idx = #{reward_idx}
	</update>
	
	<!-- 프로젝트의 누적금액 변경  -->
	<update id="updateProjectCumulativeAmount">
		UPDATE project
			SET project_cumulative_amount = project_cumulative_amount + #{total_amount}
				WHERE project_idx = #{project_idx}
	</update>
	
</mapper>
