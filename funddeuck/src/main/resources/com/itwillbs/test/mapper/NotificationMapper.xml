<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.test.mapper.NotificationMapper">
  	
  	<!-- 저장 -->
	<insert id="insertNotification">
		insert
			into notification
				values(
				null                      -- 알림번호
				, #{target}               -- 회원아이디
				, #{content}              -- 알림내용
				, now()	                  -- 알림날짜
				, 1                       -- 알림상태: 1-읽지 않음, 2-읽음'	
				)
	</insert>
	
	<!-- 갯수 조회 -->
	<select id="selectNotificationCount" resultType="int">
		select count(*)
			from notification
				where member_id = #{member_id}
				and notification_read_status = 1
	</select>	
	
	<!-- 리스트 조회 & 내림차순 정렬-->
	<select id="selectNotificationList" resultType="com.itwillbs.test.vo.NotificationVO">
		select *
			from notification
				where member_id = #{sId}
				order by notification_regdate desc
	</select>
	
	<!-- 읽음 처리 -->
	<update id="updateNotificationStatus">
		update notification
			set
				notification_read_status = 2
			where
				notification_idx = #{notification_idx}
	</update>
  	
  	<!-- 전체 읽음 처리 -->
  	<update id="updateAllNotificationStatus">
  		update notification
  			set
  				notification_read_status = 2
  			where
  				member_id = #{member_id}
  	</update>
  	
  	<!-- 안읽은 메시지 조회 -->
  	<select id="selectUnreadNotificationList">
  		select *
  			from notification
  				where
  					member_id = #{sId}
  					and notification_read_status = 1
  				order by notification_regdate desc
  	</select>
  	
  	<!-- 전체 메시지 조회 - 관리자 -->
  	<select id="selectTotalList" resultType="com.itwillbs.test.vo.NotificationVO">
  		select *
  			from notification -- 동적 SQL문
  			
  			<!-- 1. 검색어(searchKeyword)가 널스트링이 아닐 때 검색어 추가할 WHERE 절 수행, 아니면 생략 -->
			<if test="!searchKeyword.equals('')">
				WHERE
				<!-- 2. 검색타입(searchType)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="searchType.equals('content')">
						notification_content LIKE '%${searchKeyword}%'
					</when>
					<when test="searchType.equals('name')">
						member_id LIKE '%${searchKeyword}%'
					</when>
				</choose>
			</if>
			order by
				notification_regdate desc
  			LIMIT
				#{startRow}
				, #{listLimit}
  	</select>
  	
  	<!-- 전체 메시지 갯수 조회 -->
  	<select id="selectNotificationListCount" resultType="int">
  		select count(*)
  			from
  				notification 
  	</select>
  	
  	<!-- 삭제 처리 -->
  	<delete id="deleteNotification">
  		delete
  			from notification
  				where
  					notification_idx = #{notification_idx}
  	</delete>
  	
  	<!-- 아이디별 메시지 리스트 조회 -->
  	<select id="selectTotalListById">
  		select *
  			from notification -- 동적 SQL문
		WHERE
  			<!-- 1. 검색어(searchKeyword)가 널스트링이 아닐 때 검색어 추가할 WHERE 절 수행, 아니면 생략 -->
			<if test="!searchKeyword.equals('')">
				<!-- 2. 검색타입(searchType)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="searchType.equals('content')">
						notification_content LIKE '%${searchKeyword}%'
							and
					</when>
				</choose>
			</if>
				member_id = #{sId}
			order by
				notification_regdate desc
  			LIMIT
				#{startRow}
				, #{listLimit}
  	</select>
  	
  	<!-- 아이디별 메시지 갯수 조회 -->
  	<select id="selectTotalListCountById" resultType="int">
  		select count(*)
  			from notification -- 동적 SQL문
		WHERE
  			<!-- 1. 검색어(searchKeyword)가 널스트링이 아닐 때 검색어 추가할 WHERE 절 수행, 아니면 생략 -->
			<if test="!searchKeyword.equals('')">
				<!-- 2. 검색타입(searchType)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="searchType.equals('content')">
						notification_content LIKE '%${searchKeyword}%'
							and
					</when>
				</choose>
			</if>
				member_id = #{sId}
  	</select>
  	
</mapper>





























