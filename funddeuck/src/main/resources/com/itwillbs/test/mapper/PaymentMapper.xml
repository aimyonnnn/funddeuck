<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.test.mapper.PaymentMapper">
	
	<!-- 메이커별 일별 결제 금액 조회 -->
    <select id="selectPaymentListCountByDay" resultType="com.itwillbs.test.vo.PaymentVO">
        SELECT
            DATE(p.payment_date) AS date,
            SUM(p.total_amount) AS amount
        FROM
            maker m
        JOIN
            project pr ON m.maker_idx = pr.maker_idx
        JOIN
            payment p ON pr.project_idx = p.project_idx
        WHERE
            p.payment_date BETWEEN #{parsedStartDate} AND #{parsedEndDate}
            and m.maker_idx = #{maker_idx}
        GROUP BY
            m.maker_idx, m.maker_name, DATE(p.payment_date)
        ORDER BY
            m.maker_idx, date
    </select>

    <!-- 메이커별 일별 서포터 수 조회 -->
    <select id="selectSupporterListCountByDay" resultType="com.itwillbs.test.vo.PaymentVO">
        SELECT
            DATE(p.payment_date) AS date,
            COUNT(*) AS count
        FROM
            maker m
        JOIN
            project pr ON m.maker_idx = pr.maker_idx
        JOIN
            payment p ON pr.project_idx = p.project_idx
        WHERE
            p.payment_date BETWEEN #{parsedStartDate} AND #{parsedEndDate}
            and m.maker_idx = #{maker_idx}
        GROUP BY
            m.maker_idx, m.maker_name, DATE(p.payment_date)
        ORDER BY
            m.maker_idx, date
    </select>
	
	<!-- 메이커별 지난 7일간 결제 금액 조회 -->
	<select id="selectPaymentListAmountBy7Day" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT
		    DATE(p.payment_date) AS date,
		    SUM(p.total_amount) AS amount
		FROM
		    payment p
		INNER JOIN
		    project pr ON p.project_idx = pr.project_idx
		INNER JOIN
		    maker m ON pr.maker_idx = m.maker_idx
		WHERE
		    m.maker_idx = #{maker_idx}
		    AND DATE(p.payment_date) >= CURDATE() - INTERVAL 7 DAY
		GROUP BY
		    m.maker_idx, date
		ORDER BY
    		m.maker_idx, date   
	</select>
	
	<!-- 메이커별 지난 7일간 서포터 수 조회 -->
	<select id="selectSupporterListCountBy7Day" resultType="com.itwillbs.test.vo.PaymentVO">
		select
		    DATE(p.payment_date) AS date,
		    COUNT(*) AS count
		FROM
		    maker m
		JOIN
		    project pr ON m.maker_idx = pr.maker_idx
		JOIN
		    payment p ON pr.project_idx = p.project_idx
		WHERE
		    m.maker_idx = #{maker_idx}
		    AND DATE(p.payment_date) >= CURDATE() - INTERVAL 7 DAY
		GROUP BY
		    m.maker_idx, date
		ORDER BY
		    m.maker_idx, date
	</select>
	
	<!-- 전체 메이커별 지난 7일간 결제 금액 조회 -->
	<select id="selectPaymentTotalWeekRange" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT
		    DATE(p.payment_date) AS date,
		    SUM(p.total_amount) AS amount
		FROM
		    payment p
		INNER JOIN
		    project pr ON p.project_idx = pr.project_idx
		INNER JOIN
		    maker m ON pr.maker_idx = m.maker_idx
		WHERE
		    DATE(p.payment_date) >= CURDATE() - INTERVAL 7 DAY
		GROUP BY
		    date
		ORDER BY
		    date
	</select>
	
	<!-- 전체 메이커별 지난 7일간 등록된 서포터 수 -->
	<select id="selectSupporterCountWeekRange" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT
		    DATE(p.payment_date) AS date,
		    COUNT(*) AS count
		FROM
		    maker m
		JOIN
		    project pr ON m.maker_idx = pr.maker_idx
		JOIN
		    payment p ON pr.project_idx = p.project_idx
		WHERE
		    DATE(p.payment_date) >= CURDATE() - INTERVAL 7 DAY
		GROUP BY
		    date
		ORDER BY
		  	date
	</select>
	
	<!-- 전체 메이커별 결제 금액 조회 -->
	<select id="selectTotalPayment" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT
            DATE(p.payment_date) AS date,
            SUM(p.total_amount) AS amount
        FROM
            maker m
        JOIN
            project pr ON m.maker_idx = pr.maker_idx
        JOIN
            payment p ON pr.project_idx = p.project_idx
        WHERE
            p.payment_date BETWEEN #{parsedStartDate} AND #{parsedEndDate}
        GROUP BY
            date
        ORDER BY
            date
	</select>
	
	<!-- 전체 메이커별 서포터 수 조회 -->
	<select id="selectTotalSupporter" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT
            DATE(p.payment_date) AS date,
            COUNT(*) AS count
        FROM
            maker m
        JOIN
            project pr ON m.maker_idx = pr.maker_idx
        JOIN
            payment p ON pr.project_idx = p.project_idx
        WHERE
            p.payment_date BETWEEN #{parsedStartDate} AND #{parsedEndDate}
        GROUP BY
            date
        ORDER BY
            date
	</select>
	
	<!-- 프로젝트별 지난 7일간 결제 금액 조회 -->
	<select id="selectProjectDailyPayment" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT 
			DATE(payment_date) AS date,
			SUM(total_amount) AS amount
		FROM 
			payment
		WHERE 
		  	project_idx = #{project_idx}
		  	AND DATE(payment_date) BETWEEN #{startDateProject} AND #{endDateProject}
		GROUP BY 
		  	project_idx, date
		ORDER BY 
		  	project_idx, date
	</select>
	
	<!-- 프로젝트별 지정 기간 동안 서포터 수 조회 -->
	<select id="selectProjectSupporterCount" resultType="com.itwillbs.test.vo.PaymentVO">
	  	SELECT 
	    	DATE(payment_date) AS date,
	    	COUNT(*) AS count
	  	FROM 
	    	payment
	  	WHERE 
	    	project_idx = #{project_idx}
	    	AND DATE(payment_date) BETWEEN #{startDateProject} AND #{endDateProject}
	  	GROUP BY 
	    	project_idx, date
	  	ORDER BY 
	    	project_idx, date
	</select>
	
	<!-- 프로젝트별 배송상황 조회 -->
	<select id="selectDeliveryList" resultType="java.util.HashMap">
		SELECT delivery_status, count(*) as count
			FROM payment
			WHERE project_idx = #{project_idx}
			GROUP BY delivery_status;
	</select>
	
	<!-- 프로젝트별 환불승인여부 조회 -->
	<select id="selectRefundList" resultType="java.util.HashMap">
		SELECT payment_confirm, count(*) as count
			FROM payment
			WHERE project_idx = #{project_idx}
			GROUP BY payment_confirm;
			
	</select>
	
	<!-- delivery_status(배송상황)가 있을 때 목록 조회 -->
	<select id="selectDeliveryAllList" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT *
		  FROM payment p
		  JOIN members m ON p.member_idx = m.member_idx
		  JOIN reward r ON p.reward_idx = r.reward_idx
		  WHERE p.project_idx = #{project_idx}
		    AND p.delivery_status = #{filter}
	</select>
	
	<!-- payment_confirm(환불승인여부)가 있을 때 목록 조회 -->
	<select id="selectRefundAllList" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT *
		  FROM payment p
		  JOIN members m ON p.member_idx = m.member_idx
		  JOIN reward r ON p.reward_idx = r.reward_idx
		  WHERE p.project_idx = #{project_idx}
		    AND p.payment_confirm = #{type}
	</select>
	
	<!-- 전체 목록 조회 -->
	<select id="selectAllList" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT *
		  FROM payment p
		  JOIN members m ON p.member_idx = m.member_idx
		  JOIN reward r ON p.reward_idx = r.reward_idx
		  WHERE p.project_idx = #{project_idx}
	</select>
	
	<!-- 목록 인원수 조회 -->
	<select id="selectPaymentListCount" resultType="int">
		SELECT count(payment_idx)
			FROM payment
			WHERE project_idx = #{project_idx}
	</select>
	
	<!-- 메이커의 전체 프로젝트 결제 내역 조회 -->
	<select id="selectAllMakerPayment" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT p.*, proj.project_subject, r.reward_name
        FROM payment p
        INNER JOIN project proj ON p.project_idx = proj.project_idx
        LEFT JOIN reward r ON p.reward_idx = r.reward_idx
        WHERE proj.maker_idx = #{maker_idx}
        order by p.payment_date desc
	</select>
	
	<!--  -->
	<!-- 메이커의 프로젝트별 결제 내역 조회 -->
	<select id="selectPaymentByProjectIdx" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT p.*, proj.project_subject, r.reward_name
        FROM payment p
        INNER JOIN project proj ON p.project_idx = proj.project_idx
        LEFT JOIN reward r ON p.reward_idx = r.reward_idx
        WHERE proj.maker_idx = #{maker_idx}
        	  AND proj.project_idx = #{project_idx}
        	  AND DATE(payment_date) BETWEEN #{parsedStartDate} AND #{parsedEndDate}
        order by p.payment_date desc
       	LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 갯수 조회 -->
	<select id="selectTotalCountByProjectIdx">
	 	SELECT COUNT(*) AS totalCount
	    FROM payment p
	    INNER JOIN project proj ON p.project_idx = proj.project_idx
	    WHERE proj.maker_idx = #{maker_idx}
	          AND proj.project_idx = #{project_idx}
	          AND DATE(payment_date) BETWEEN #{parsedStartDate} AND #{parsedEndDate}
	</select>
	
	<!-- 발송입력 - 모달창 리스트 조회 -->
	<select id="selectShippingModalList" resultType="com.itwillbs.test.vo.PaymentVO">
	    SELECT *
	        FROM payment p
	        JOIN members m ON p.member_idx = m.member_idx
	        JOIN reward r ON p.reward_idx = r.reward_idx
	        JOIN delivery d ON p.delivery_idx = d.delivery_idx
	        WHERE payment_idx = #{payment_idx}
	</select>


	<!-- 송장입력 후 발송 업데이트 -->
	<update id="updateShippingInfo">
		UPDATE payment
			SET delivery_method = #{delivery_method}
			, courier = #{courier}
			, waybill_num = #{waybill_num}
			WHERE payment_idx = #{payment_idx}			
	</update>

	<!-- 송장입력 후 일주일 후 '배송완료'로 상태변경 -->
	<update id="updateDeliveryStatusPaymentList">
		UPDATE payment
			SET delivery_status = 3
			WHERE payment_idx = #{payment_idx}
	</update>

	<!-- 결제목록 조회 -->
	<select id="selectPaymentList" resultType="com.itwillbs.test.vo.PaymentVO">
		SELECT *
			FROM payment
			WHERE payment_idx = #{payment_idx}
	</select>
	
	<select id="selectRemainingQuantities" resultType="com.itwillbs.test.vo.PaymentVO">
		 SELECT
			r.project_idx,
		    r.reward_idx,
		    r.reward_name,	
		    r.reward_option,
		    r.reward_quantity, 
	        r.reward_quantity - IFNULL(SUM(p.payment_quantity), 0) as remaining_quantity,
    	    r.reward_quantity - (r.reward_quantity - IFNULL(SUM(p.payment_quantity), 0)) as sales_quantity
	    FROM 
	        reward r
	    LEFT JOIN 
	        payment p ON r.reward_idx = p.reward_idx
	        AND p.payment_confirm = 1 					-- 예약완료
	    WHERE 
	        r.project_idx = #{project_idx}
	    GROUP BY 
	        r.project_idx, r.reward_idx, r.reward_option, r.reward_quantity;
	</select>
	
	<!-- 결제내역 조회 -->
	<select id="selectPaymentDetail">
		select *
			from payment
		where
			payment_idx = #{payment_idx}
	</select>
	
	<!-- 정산내역 조회 -->
<!-- 	<select id="selectSettlementList" resultType="com.itwillbs.test.vo.PaymentVO"> -->
<!-- 		SELECT  -->
<!-- 			FROM payment p -->
<!-- 			WHERE project_idx = #{project_idx} -->
<!-- 	</select> -->
	
</mapper>
